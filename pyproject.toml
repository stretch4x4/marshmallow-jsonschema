[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "marshmallow-jsonschema"
version = "0.15.0.dev0"
description = "Formatting marshmallow schemas as JSON Schema Draft v7 (http://json-schema.org/)"
readme = "README.md"
license = "MIT"
license-files = ["LICEN[CS]E*", "AUTHORS.md"]
requires-python = ">=3.10"
authors = [
    { name = "stretch4x4", email = "stretch4x4@users.noreply.github.com" },
    { name = "Stephen Fuhry", email = "fuhrysteve@gmail.com" },
]
keywords = [
    "jsonschema",
    "marshmallow",
    "marshmallow-jsonschema",
    "schema",
    "serialization",
    "validation",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Documentation",
    "Topic :: File Formats :: JSON",
    "Topic :: File Formats :: JSON :: JSON Schema",
]
dependencies = [
    "marshmallow~=3.11",
]

[project.optional-dependencies]
enum = [
    "marshmallow-enum",
]
union = [
    "marshmallow-union",
]

[project.urls]
Homepage = "https://github.com/stretch4x4/marshmallow-jsonschema"
Documentation = "https://github.com/stretch4x4/marshmallow-jsonschema/blob/master/README.md"
Repository = "https://github.com/stretch4x4/marshmallow-jsonschema.git"
Issues = "https://github.com/stretch4x4/marshmallow-jsonschema/issues"
Changelog = "https://github.com/stretch4x4/marshmallow-jsonschema/blob/master/CHANGES"

[dependency-groups]
dev = [
    "coverage~=7.10",
    "jsonschema~=4.25",
    "marshmallow-dataclass~=8.7",
    "marshmallow-enum~=1.5",
    "marshmallow-union~=0.1",
    "pre-commit~=4.3",
    "pytest~=8.4",
    "pytest-cov~=7.0",
    "ruff==0.13.1", # hard pinned to match the pre-commit-config
]

[tool.ruff]
line-length = 120
# gitignore contents (and potentially other ignore files) are also excluded
respect-gitignore = true
# overlaps with existing gitignore exclusions are ok
extend-exclude = [
    "**/env/**",
    "**/build/**",
    "**/dist/**",
    "**/_build/**",
    "**/.eggs/**",
    "**/.git/**",
    "**/.hg/**",
    "**/.mypy_cache/**",
    "**/.nox/**",
    "**/.venv/**",
    "**/docs/**",
]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "COM",  # flake8 comma rules - redundant with ruff format
    "D",  # pydocstyle - not currently a priority
    "PLR2004",  # Magic value used in comparison - not currently a priority
    "FIX",  # comments with follow up - not currently a priority
    "TD",  # comments with follow up - not currently a priority
    # TODO: renable the following
    "ANN",  # typing rules - Return to this and enable
    "SLF",  # flake8-self - private vars, return to this
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
    "S101",  # asserts are allowed in tests
]
"example/**" = [
    "INP001",  # __init__.py file is not required
    "S104",  # Possible binding to all interfaces
    "E501", # Line too long
]
